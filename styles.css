@keyframes matrix-text {
    0% {
        content: attr(data-text)
    }

    to {
        content: attr(data-matrix)
    }
}

#output,
#terminal,
body {
    background-color: transparent;
    color: #fff
}

body {
    font-family: "Inconsolata", monospace
}

h1 {
    font-size: 2em;
    text-align: center;
    animation: falling-text 3s, matrix-text .1s 5;
    font-family: "Courier New", Courier, monospace;
    color: #0f0;
    text-shadow: 0 0 10px #0f0
}

#matrix {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -1
}

#terminal {
    width: 80%;
    margin: 50px auto;
    padding: 20px;
    border-radius: 10px
}

#output {
    margin-bottom: 20px;
    overflow: auto;
    max-height: 300px
}

#input {
    width: 80%;
    padding: 10px;
    border: 0;
    border-radius: 10px;
    background-color: #000;
    color: #fff;
    font-family: "Inconsolata", monospace;
    font-size: 16px;
    position: fixed;
    bottom: 40px;
    left: 0;
    right: 0;
    margin: 0 auto;
    -webkit-text-size-adjust: 100%
}

#prompt {
    display: flex;
    align-items: center
}

#path {
    font-size: 14px
}

@media only screen and (min-width:375px) {
    #terminal {
        font-size: 1.2em
    }
}

@media only screen and (min-width:414px) {
    #terminal {
        font-size: 1.4em
    }
}

@media only screen and (min-width:390px) {
    #terminal {
        font-size: 1.4em
    }
}

@media only screen and (min-width:428px) {
    #terminal {
        font-size: 1.6em
    }
}

@media only screen and (min-width:810px) {
    #terminal {
        font-size: 1.8em
    }
}

@media only screen and (min-width:384px) {
    #terminal {
        font-size: 1.6em
    }
}

@media only screen and (min-width:412px) {
    #terminal {
        font-size: 1.8em
    }
}

@media only screen and (min-width:30px) {
    #terminal {
        font-size: 1.8em
    }
}

@media only screen and (max-width:600px) {
    h1 {
        font-size: 1.5em
    }
}

/*# sourceMappingURL=application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIjx1bmtub3duPiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFvRUEsQSx1QkFDSSxFLENBQ0ksdUIsQ0FHSixFLENBQ0ksMkJBMUVSLE8sQ0FDQSxTLENBQ0EsSSxDQUNJLDRCLENBQ0EsVSxDQUdKLEksQ0FDSSxtQyxDQUdKLEUsQ0FDSSxhLENBQ0EsaUIsQ0FDQSwyQyxDQUNBLDJDLENBQ0EsVSxDQUNBLHlCLENBR0osTyxDQUNJLGlCLENBQ0EsSyxDQUNBLE0sQ0FDQSxVLENBQ0EsVyxDQUNBLFUsQ0FHSixTLENBQ0ksUyxDQUNBLGdCLENBQ0EsWSxDQUNBLGtCLENBR0osTyxDQUNJLGtCLENBQ0EsYSxDQUNBLGdCLENBR0osTSxDQUNJLFMsQ0FDQSxZLENBQ0EsUSxDQUNBLGtCLENBQ0EscUIsQ0FDQSxVLENBQ0EsbUMsQ0FDQSxjLENBQ0EsYyxDQUNBLFcsQ0FDQSxNLENBQ0EsTyxDQUNBLGEsQ0FDQSw2QixDQUdKLE8sQ0FDSSxZLENBQ0Esa0IsQ0FHSixLLENBQ0ksYyxDQWFKLHlDQUNJLFMsQ0FDSSxpQkFJUixBLHlDQUNJLFMsQ0FDSSxpQkFJUixBLHlDQUNJLFMsQ0FDSSxpQkFJUixBLHlDQUNJLFMsQ0FDSSxpQkFJUixBLHlDQUNJLFMsQ0FDSSxpQkFJUixBLHlDQUNJLFMsQ0FDSSxpQkFJUixBLHlDQUNJLFMsQ0FDSSxpQkFJUixBLHdDQUNJLFMsQ0FDSSxpQkFJUixBLHlDQUNJLEUsQ0FDSSxpQiIsImZpbGUiOiI8dW5rbm93bj4iLCJzb3VyY2VzQ29udGVudCI6WyIjb3V0cHV0LFxuI3Rlcm1pbmFsLFxuYm9keSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgY29sb3I6ICNmZmZcbn1cblxuYm9keSB7XG4gICAgZm9udC1mYW1pbHk6IFwiSW5jb25zb2xhdGFcIiwgbW9ub3NwYWNlXG59XG5cbmgxIHtcbiAgICBmb250LXNpemU6IDJlbTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgYW5pbWF0aW9uOiBmYWxsaW5nLXRleHQgM3MsIG1hdHJpeC10ZXh0IC4xcyA1O1xuICAgIGZvbnQtZmFtaWx5OiBcIkNvdXJpZXIgTmV3XCIsIENvdXJpZXIsIG1vbm9zcGFjZTtcbiAgICBjb2xvcjogIzBmMDtcbiAgICB0ZXh0LXNoYWRvdzogMCAwIDEwcHggIzBmMFxufVxuXG4jbWF0cml4IHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAwO1xuICAgIGxlZnQ6IDA7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIHotaW5kZXg6IC0xXG59XG5cbiN0ZXJtaW5hbCB7XG4gICAgd2lkdGg6IDgwJTtcbiAgICBtYXJnaW46IDUwcHggYXV0bztcbiAgICBwYWRkaW5nOiAyMHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDEwcHhcbn1cblxuI291dHB1dCB7XG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcbiAgICBvdmVyZmxvdzogYXV0bztcbiAgICBtYXgtaGVpZ2h0OiAzMDBweFxufVxuXG4jaW5wdXQge1xuICAgIHdpZHRoOiA4MCU7XG4gICAgcGFkZGluZzogMTBweDtcbiAgICBib3JkZXI6IDA7XG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDAwO1xuICAgIGNvbG9yOiAjZmZmO1xuICAgIGZvbnQtZmFtaWx5OiBcIkluY29uc29sYXRhXCIsIG1vbm9zcGFjZTtcbiAgICBmb250LXNpemU6IDE2cHg7XG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIGJvdHRvbTogNDBweDtcbiAgICBsZWZ0OiAwO1xuICAgIHJpZ2h0OiAwO1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJVxufVxuXG4jcHJvbXB0IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXJcbn1cblxuI3BhdGgge1xuICAgIGZvbnQtc2l6ZTogMTRweFxufVxuXG5Aa2V5ZnJhbWVzIG1hdHJpeC10ZXh0IHtcbiAgICAwJSB7XG4gICAgICAgIGNvbnRlbnQ6IGF0dHIoZGF0YS10ZXh0KVxuICAgIH1cblxuICAgIHRvIHtcbiAgICAgICAgY29udGVudDogYXR0cihkYXRhLW1hdHJpeClcbiAgICB9XG59XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDozNzVweCkge1xuICAgICN0ZXJtaW5hbCB7XG4gICAgICAgIGZvbnQtc2l6ZTogMS4yZW1cbiAgICB9XG59XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDo0MTRweCkge1xuICAgICN0ZXJtaW5hbCB7XG4gICAgICAgIGZvbnQtc2l6ZTogMS40ZW1cbiAgICB9XG59XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDozOTBweCkge1xuICAgICN0ZXJtaW5hbCB7XG4gICAgICAgIGZvbnQtc2l6ZTogMS40ZW1cbiAgICB9XG59XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDo0MjhweCkge1xuICAgICN0ZXJtaW5hbCB7XG4gICAgICAgIGZvbnQtc2l6ZTogMS42ZW1cbiAgICB9XG59XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDo4MTBweCkge1xuICAgICN0ZXJtaW5hbCB7XG4gICAgICAgIGZvbnQtc2l6ZTogMS44ZW1cbiAgICB9XG59XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDozODRweCkge1xuICAgICN0ZXJtaW5hbCB7XG4gICAgICAgIGZvbnQtc2l6ZTogMS42ZW1cbiAgICB9XG59XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDo0MTJweCkge1xuICAgICN0ZXJtaW5hbCB7XG4gICAgICAgIGZvbnQtc2l6ZTogMS44ZW1cbiAgICB9XG59XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDozMHB4KSB7XG4gICAgI3Rlcm1pbmFsIHtcbiAgICAgICAgZm9udC1zaXplOiAxLjhlbVxuICAgIH1cbn1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOjYwMHB4KSB7XG4gICAgaDEge1xuICAgICAgICBmb250LXNpemU6IDEuNWVtXG4gICAgfVxufSJdfQ== */